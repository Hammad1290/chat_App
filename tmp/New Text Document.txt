To start working on the backend of a chat app, you should begin by designing the data schema and setting up your backend environment. Here are the steps you can follow to get started:

Design the data schema: Think about the data you need to store for a chat app. This might include information about users, messages, and chat rooms. You will need to design a data schema that can store this information efficiently. You can use a document-based NoSQL database like MongoDB to store your data.

Set up your backend environment: Install Node.js and a package manager like npm or yarn. Create a new Node.js project and install any necessary packages you need, such as Express and Mongoose.

Create API endpoints: Create API endpoints for handling user authentication, creating and managing chat rooms, and sending and receiving messages. You can use the Express framework to create these endpoints.

Implement real-time communication: Use a library like Socket.IO to implement real-time communication between users. This will allow users to send and receive messages in real-time without having to refresh the page.

Test and deploy: Test your backend API using tools like Postman or Insomnia. Once you are satisfied with your implementation, deploy your backend to a cloud hosting service like Heroku or AWS.

By following these steps, you can get started on building the backend of a chat app. Remember to keep security in mind when implementing user authentication and handling user data.